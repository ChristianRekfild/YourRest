version: '3.8'

services:
  webapi:
    build:
      context: .
      dockerfile: YourRest.WebApi/Dockerfile
    ports:
      - "5000:80"
    depends_on:
      - keycloak
      - webapidb
    networks:
      - local-network

  keycloak:
    build:
      context: .
      dockerfile: Infrastructure/YourRest.Producer.Infrastructure.Keycloak/Docker/Dockerfile
    environment:
      - DB_VENDOR=postgres
      - DB_ADDR=keycloakdb
      - DB_DATABASE=keycloak
      - DB_USER=keycloak
      - DB_PASSWORD=keycloakpassword
      - KEYCLOAK_USER=admin
      - KEYCLOAK_PASSWORD=admin
      - KEYCLOAK_IMPORT=/opt/jboss/keycloak/realm-export.json
    ports:
      - 8080:8080
    depends_on:
      - keycloakdb
    networks:
      - local-network
    volumes:
      - keycloak-data:/opt/jboss/keycloak/standalone/data

  keycloakdb:
    image: postgres:latest
    environment:
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=keycloak
      - POSTGRES_PASSWORD=keycloakpassword
    volumes:
      - keycloakdb-data:/var/lib/postgresql/data
    networks:
      - local-network

  webapidb:
    image: postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: your_rest
    ports:
      - "5433:5432"
    networks:
      - local-network
        
  minio:
    image: minio/minio
    container_name: minio1
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data
    networks:
      - local-network
        
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - ./rabbitmq_data:/var/lib/rabbitmq
    networks:
      - local-network

volumes:
  pgdata:
  minio-data:
  keycloak-data:
  keycloakdb-data:
  rabbitmq_data:

networks:
  local-network:
    driver: bridge
